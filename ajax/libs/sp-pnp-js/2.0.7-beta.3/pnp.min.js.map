{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnp.min.js","webpack:///webpack/bootstrap 311571693d6668b0134c","webpack:///./lib/utils/util.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/utils/logging.js","webpack:///./lib/collections/collections.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/queryableshareable.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/utils/storage.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/sharepoint/utilities.js","webpack:///./lib/sharepoint/webparts.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/types/index.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/pnp.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/sharepoint/pipeline.js","webpack:///./lib/sharepoint/relateditems.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/utils/decorators.js","webpack:///./lib/utils/files.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","pnplibconfig_1","Util","getCtxCallback","context","method","params","_i","arguments","length","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","stringInsert","target","index","substring","dateAdd","date","interval","units","ret","Date","toLocaleString","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","combinePaths","paths","filter","stringIsNullOrEmpty","map","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","isFunction","candidateFunction","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","toAbsoluteUrl","candidateUrl","Promise","resolve","RuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","forEach","indexOf","substr","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","util_1","collections_1","httpclient_1","odata_1","exceptions_1","logging_1","pipeline_1","Queryable","_options","_query","Dictionary","_batch","urlStr","lastIndexOf","_parentUrl","_url","slice","q","add","concat","pathPart","append","addBatchDependency","hasBatch","addDependency","configure","options","mergeOptions","as","inBatch","batch","AlreadyInBatchException","usingCaching","globalCacheDisable","_useCaching","_cachingOptions","toUrl","toUrlAndQuery","aliasedParams","match","labelName","Logger","write","LogLevel","Verbose","merge","count","getKeys","key","getParent","parentUrl","parent","query","clone","additionalPath","includeBatch","parser","getOptions","ODataDefaultParser","toRequestContext","then","pipe","getAs","post","postOptions","postAs","patch","patchOptions","delete","deleteOptions","verb","pipeline","_this","PipelineMethods","default","dependencyDispose","batchDependency","cachingOptions","isBatched","isCached","requestAbsoluteUrl","requestId","QueryableCollection","_super","select","selects","expand","expands","orderBy","ascending","keys","asc","push","skip","top","QueryableInstance","extractOdataId","candidate","__metadata","id","ODataIdException","getEntityUrl","entity","uri","Warning","ODataValue","ODataValueParserImpl","ODataEntity","ODataEntityParserImpl","ODataEntityArray","ODataEntityArrayParserImpl","exceptions_2","ODataParserBase","parse","reject","handleError","headers","has","parseFloat","status","json","parseODataJSON","catch","ok","data","responseBody","responseHeaders","ProcessHttpClientResponseException","statusText","log","level","message","result","ODataRawParserImpl","ODataRaw","ODataBatch","_batchId","_requests","_dependencies","info","toUpperCase","resolver","promise","execute","all","executeImpl","batchId","Info","client","HttpClient","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","Headers","set","mergeHeaders","body","batchHeaders","Content-Type","batchOptions","_parseResponse","responses","BatchParseException","chain","response","request","_","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","arrayBuffer","buffer","defaultLog","error","Error","NoCacheAvailableException","msg","APIUrlException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","FunctionExpectedException","UrlException","setRuntimeConfig","config","_runtimeConfig","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","_baseUrl","_spfxContext","defaultCachingStore","defaultCachingTimeoutSeconds","fetchClientFactory","spfxContext","pageContext","web","absoluteUrl","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","JSON","stringify","entry","measure","f","subscribers","subscriber","console","profile","profileEnd","ConsoleListener","format","warn","FunctionListener","values","sourceAsDictionary_1","sourceAsHash","remove","val","splice","getValues","clear","queryable_1","webparts_1","items_1","queryableshareable_1","odata_2","Files","getByName","File","content","shouldOverWrite","file","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","CheckinType","Major","checkout","copyTo","eTag","IF-Match","X-HTTP-Method","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveTo","moveOperations","MoveOperations","Overwrite","publish","recycle","undoCheckout","unpublish","getText","binaryStringResponseBody","getBlob","getBuffer","getJSON","setContent","getItem","listItemAllFields","Item","self","fileSize","size","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","QueryableShareableFile","getById","versionId","Version","deleteAll","deleteById","deleteByLabel","label","restoreByLabel","TemplateFileType","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","usercustomactions_1","features_1","decorators_1","relateditems_1","Webs","webPath","title","description","template","language","inheritPermissions","additionalSettings","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","postBody","parameters","type","Web","WebInfos","fromUrl","ContentTypes","Lists","Fields","Features","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","UserCustomActions","RoleDefinitions","RelatedItemManagerImpl","FromUrl","createBatch","Folder","SiteGroup","getFolderByServerRelativeUrl","folderRelativeUrl","getFileByServerRelativeUrl","fileRelativeUrl","getList","listRelativeUrl","List","update","properties","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","doesUserHavePermissions","perms","ensureUser","loginName","logonName","user","SiteUser","availableWebTemplates","includeCrossLanugage","getCatalog","getChanges","getUserById","mapToIcon","filename","progId","QueryableShareableWeb","deprecated","Request","digestcache_1","_impl","_digestCache","DigestCache","fetch","opts","cache","credentials","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","delay","attempts","retryCount","setTimeout","retryContext","folder","QueryableShareableFolder","attachmentfiles_1","Items","getPaged","PagedItemCollectionParser","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","Id","candidatelistItemEntityTypeFullName","getListItemEntityTypeFullName","AttachmentFiles","ContentType","ListItemEntityTypeFullName","ItemUpdatedParser","getWopiFrameUrl","action","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","QueryableShareableItem","PagedItemCollection","nextUrl","getNext","hasNext","__next","odata.etag","views_1","forms_1","subscriptions_1","queryablesecurable_1","getByTitle","list","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Views","Forms","Subscriptions","getView","viewId","View","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","QueryableSecurable","webs_1","types_1","QueryableShareable","getShareLink","kind","expiration","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","SharingRole","Edit","RoleType","Contributor","Reader","roleDefinitions","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","group","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","associatedMemberGroup","g","Guest","associatedVisitorGroup","getShareObjectWeb","dependency","shareObjectRaw","SharingLinkKind","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","shareEverything","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType","PrincipalSource","PageType","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","persistable","put","expire","setItem","createPersistable","removeItem","getOrPut","defaultTimeout","MemoryStorage","_store","PnPClientStorage","local","localStorage","session","sessionStorage","ct","addAvailableContentType","contentTypeId","contentType","Group","StringValue","Name","FieldLinks","fl","FieldLink","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Order","definition","retDef","groupName","sg","removeById","removeByLoginName","retGroup","uca","UserCustomAction","storage","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","storage_1","CachingOptions","storeName","CachingParserWrapper","_parser","_cacheOptions","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","Field","getByInternalNameOrTitle","createFieldAsXml","xml","SchemaXml","field","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","getUserEffectivePermissions","getCurrentUserEffectivePermissions","currentUser","LoginName","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","EnableNicknames","EnableFql","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HithighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsURL","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UIlanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","part","Search","formattedBody","fixupProp","SearchResults","prop","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SearchSuggest","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","Site","getContextInfo","GetContextWebInformation","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","getByEmail","email","getByLoginName","su","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","maxCount","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","zoneId","zoneIndex","close","open","Function","eval","window","Settings","_settings","addJSON","hash","load","provider","reason","search_1","searchsuggest_1","site_1","userprofiles_1","utilities_1","SPRest","searchSuggest","finalQuery","UserProfileQuery","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","__export","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","cachingConfigurationProvider_1","spListConfigurationProvider_1","SPListConfigurationProvider","sourceWeb","sourceListTitle","lists","listTitle","items","configuration","asCaching","CachedDigest","digests","_httpClient","_digests","cachedDigest","Accept","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","next","done","requestOptions","success","binaryStringRequestBody","executeAsync","configuration_1","rest_1","util","sp","setup","Def","AttachmentFile","addMultiple","files","Form","returnResult","setResult","hasResult","shift","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","caching_1","logStart","caching","cacheOptions","send","logEnd","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","personalView","PersonalView","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","removeAll","deprecationVersion","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer"],"mappings":"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","file":"pnp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/**\n * sp-pnp-js v2.0.7-beta.3 - A JavaScript library for SharePoint development.\n * MIT (https://github.com/SharePoint/PnP-JS-Core/blob/master/LICENSE)\n * Copyright (c) 2017 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/SharePoint/PnP-JS-Core\n * bugs: https://github.com/SharePoint/PnP-JS-Core/issues\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 42);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = __webpack_require__(4);\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar httpclient_1 = __webpack_require__(9);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar logging_1 = __webpack_require__(5);\nvar pipeline_1 = __webpack_require__(46);\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._options = {};\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    Queryable.prototype.configure = function (options) {\n        httpclient_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            httpclient_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar httpclient_1 = __webpack_require__(9);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar exceptions_2 = __webpack_require__(3);\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                httpclient_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    httpclient_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.7-beta.3\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = __webpack_require__(21);\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\nvar webparts_1 = __webpack_require__(32);\nvar items_1 = __webpack_require__(11);\nvar queryableshareable_1 = __webpack_require__(13);\nvar odata_2 = __webpack_require__(2);\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar lists_1 = __webpack_require__(12);\nvar fields_1 = __webpack_require__(24);\nvar navigation_1 = __webpack_require__(25);\nvar sitegroups_1 = __webpack_require__(18);\nvar contenttypes_1 = __webpack_require__(16);\nvar folders_1 = __webpack_require__(10);\nvar roles_1 = __webpack_require__(17);\nvar files_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar lists_2 = __webpack_require__(12);\nvar siteusers_1 = __webpack_require__(30);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\nvar decorators_1 = __webpack_require__(51);\nvar queryableshareable_1 = __webpack_require__(13);\nvar relateditems_1 = __webpack_require__(47);\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions\n     *\n     * @param perms The high and low permission range\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"2.0.7\", \"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = __webpack_require__(39);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.7-beta.3\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(13);\nvar files_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar items_1 = __webpack_require__(11);\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(13);\nvar folders_1 = __webpack_require__(10);\nvar files_1 = __webpack_require__(7);\nvar contenttypes_1 = __webpack_require__(16);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar attachmentfiles_1 = __webpack_require__(43);\nvar lists_1 = __webpack_require__(12);\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = __webpack_require__(11);\nvar views_1 = __webpack_require__(50);\nvar contenttypes_1 = __webpack_require__(16);\nvar fields_1 = __webpack_require__(24);\nvar forms_1 = __webpack_require__(44);\nvar subscriptions_1 = __webpack_require__(48);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar util_1 = __webpack_require__(0);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar exceptions_1 = __webpack_require__(3);\nvar folders_1 = __webpack_require__(10);\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar webs_1 = __webpack_require__(8);\nvar odata_1 = __webpack_require__(2);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar types_1 = __webpack_require__(14);\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar siteusers_1 = __webpack_require__(30);\nvar util_1 = __webpack_require__(0);\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = __webpack_require__(15);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = __webpack_require__(15);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar types_1 = __webpack_require__(14);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = __webpack_require__(8);\nvar roles_1 = __webpack_require__(17);\nvar types_1 = __webpack_require__(14);\nvar queryable_1 = __webpack_require__(1);\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFql: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (id) {\n        return this.extendQuery({ StartRow: id });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (id) {\n        return this.extendQuery({ RowLimit: id });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (id) {\n        return this.extendQuery({ RowsPerPage: id });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HithighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsURL: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UIlanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HithighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1) + 1,\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    return SearchBuiltInSourceId;\n}());\nSearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\nSearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\nSearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\nSearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\nSearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\nSearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\nSearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\nSearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\nSearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\nSearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\nSearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\nSearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\nSearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\nSearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\nSearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar webs_1 = __webpack_require__(8);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).post().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar files_1 = __webpack_require__(7);\nvar odata_1 = __webpack_require__(2);\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAs({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\", true).post();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\", true).post();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\", true).post();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\", true).post();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = __webpack_require__(27);\nvar searchsuggest_1 = __webpack_require__(28);\nvar site_1 = __webpack_require__(29);\nvar webs_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar userprofiles_1 = __webpack_require__(49);\nvar exceptions_1 = __webpack_require__(3);\nvar utilities_1 = __webpack_require__(31);\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(45));\nvar httpclient_1 = __webpack_require__(9);\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = __webpack_require__(41);\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = __webpack_require__(40);\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = __webpack_require__(21);\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(__webpack_require__(37));\nvar collections_1 = __webpack_require__(6);\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = __webpack_require__(0);\nexports.Util = util_1.Util;\n__export(__webpack_require__(5));\n__export(__webpack_require__(3));\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = __webpack_require__(38);\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(3);\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar storage_1 = __webpack_require__(15);\nvar configuration_1 = __webpack_require__(34);\nvar logging_1 = __webpack_require__(5);\nvar rest_1 = __webpack_require__(35);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(__webpack_require__(36));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(22));\nvar files_1 = __webpack_require__(7);\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = __webpack_require__(10);\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = __webpack_require__(11);\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = __webpack_require__(25);\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = __webpack_require__(12);\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = __webpack_require__(2);\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = __webpack_require__(1);\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = __webpack_require__(17);\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = __webpack_require__(27);\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = __webpack_require__(28);\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = __webpack_require__(29);\nexports.Site = site_1.Site;\n__export(__webpack_require__(14));\nvar utilities_1 = __webpack_require__(31);\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = __webpack_require__(32);\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = __webpack_require__(8);\nexports.Web = webs_1.Web;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = __webpack_require__(22);\nvar httpclient_1 = __webpack_require__(9);\nvar logging_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(0);\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\nexports.PipelineMethods = PipelineMethods;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(52);\nvar odata_1 = __webpack_require__(2);\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or Queryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction deprecated(deprecationVersion, message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: \"(\" + deprecationVersion + \") \" + message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// pnp.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 311571693d6668b0134c","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar odata_1 = require(\"./odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar pipeline_1 = require(\"./pipeline\");\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._options = {};\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    Queryable.prototype.configure = function (options) {\n        httpclient_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            httpclient_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryable.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar exceptions_2 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                httpclient_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    httpclient_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.7-beta.3\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/odata.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/exceptions.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = require(\"../net/fetchclient\");\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/pnplibconfig.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/logging.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collections/collections.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar webparts_1 = require(\"./webparts\");\nvar items_1 = require(\"./items\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar odata_2 = require(\"./odata\");\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/files.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar lists_1 = require(\"./lists\");\nvar fields_1 = require(\"./fields\");\nvar navigation_1 = require(\"./navigation\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar folders_1 = require(\"./folders\");\nvar roles_1 = require(\"./roles\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar lists_2 = require(\"./lists\");\nvar siteusers_1 = require(\"./siteusers\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\nvar decorators_1 = require(\"../utils/decorators\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar relateditems_1 = require(\"./relateditems\");\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions\n     *\n     * @param perms The high and low permission range\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"2.0.7\", \"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webs.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.7-beta.3\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/httpclient.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/folders.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar folders_1 = require(\"./folders\");\nvar files_1 = require(\"./files\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar attachmentfiles_1 = require(\"./attachmentfiles\");\nvar lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/items.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = require(\"./items\");\nvar views_1 = require(\"./views\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar fields_1 = require(\"./fields\");\nvar forms_1 = require(\"./forms\");\nvar subscriptions_1 = require(\"./subscriptions\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar util_1 = require(\"../utils/util\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar folders_1 = require(\"./folders\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/lists.js\n// module id = 12\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar webs_1 = require(\"./webs\");\nvar odata_1 = require(\"./odata\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar types_1 = require(\"./types\");\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryableshareable.js\n// module id = 13\n// module chunks = 0","\"use strict\";\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/types.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar collections_1 = require(\"../collections/collections\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/storage.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/contenttypes.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/roles.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar siteusers_1 = require(\"./siteusers\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/sitegroups.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/usercustomactions.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = require(\"../../utils/storage\");\nvar exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/cachingConfigurationProvider.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/fetchclient.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"../utils/storage\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/caching.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/features.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar types_1 = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/fields.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/navigation.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = require(\"./webs\");\nvar roles_1 = require(\"./roles\");\nvar types_1 = require(\"./types\");\nvar queryable_1 = require(\"./queryable\");\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryablesecurable.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFql: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (id) {\n        return this.extendQuery({ StartRow: id });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (id) {\n        return this.extendQuery({ RowLimit: id });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (id) {\n        return this.extendQuery({ RowsPerPage: id });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HithighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsURL: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UIlanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HithighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1) + 1,\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    return SearchBuiltInSourceId;\n}());\nSearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\nSearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\nSearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\nSearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\nSearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\nSearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\nSearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\nSearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\nSearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\nSearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\nSearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\nSearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\nSearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\nSearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\nSearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/search.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/searchsuggest.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar webs_1 = require(\"./webs\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).post().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/site.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/siteusers.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar files_1 = require(\"./files\");\nvar odata_1 = require(\"./odata\");\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAs({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/utilities.js\n// module id = 31\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\", true).post();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\", true).post();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\", true).post();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\", true).post();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webparts.js\n// module id = 32\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/configuration.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = require(\"./search\");\nvar searchsuggest_1 = require(\"./searchsuggest\");\nvar site_1 = require(\"./site\");\nvar webs_1 = require(\"./webs\");\nvar util_1 = require(\"../utils/util\");\nvar userprofiles_1 = require(\"./userprofiles\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utilities_1 = require(\"./utilities\");\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/rest.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/types/index.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/index.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/spListConfigurationProvider.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"../sharepoint/odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/digestcache.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/nodefetchclientbrowser.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/sprequestexecutorclient.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./utils/util\");\nvar storage_1 = require(\"./utils/storage\");\nvar configuration_1 = require(\"./configuration/configuration\");\nvar logging_1 = require(\"./utils/logging\");\nvar rest_1 = require(\"./sharepoint/rest\");\nvar pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pnp.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/attachmentfiles.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/forms.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = require(\"./folders\");\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = require(\"./queryable\");\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar utilities_1 = require(\"./utilities\");\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = require(\"./webparts\");\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/index.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"./caching\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\nexports.PipelineMethods = PipelineMethods;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/pipeline.js\n// module id = 46\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/relateditems.js\n// module id = 47\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/subscriptions.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar files_1 = require(\"../utils/files\");\nvar odata_1 = require(\"./odata\");\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or Queryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/userprofiles.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/views.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"./logging\");\nfunction deprecated(deprecationVersion, message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: \"(\" + deprecationVersion + \") \" + message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/decorators.js\n// module id = 51\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/files.js\n// module id = 52\n// module chunks = 0"],"sourceRoot":""}